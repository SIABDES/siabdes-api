// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "bumdes", "journals"]
}

// Auth Schema
model AuthUser {
  id String @id @default(cuid())

  identifier String       @unique
  password   String
  role       AuthUserRole

  bumdes     Bumdes?
  bumdesUnit BumdesUnit?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("users")
  @@schema("auth")
}

enum AuthUserRole {
  UNIT
  BUMDES
  KECAMATAN
  KABUPATEN

  @@map("users_role")
  @@schema("auth")
}

// Bumdes Schema
model Bumdes {
  id String @id @default(cuid())

  name  String
  phone String

  completeAddress String?
  province        String
  regency         String
  district        String
  village         String
  postalCode      String

  user   AuthUser @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String   @unique

  units BumdesUnit[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([province, regency, district, village, postalCode], name: "bumdes_address")
  @@map("bumdes")
  @@schema("bumdes")
}

model BumdesUnit {
  id String @id @default(cuid())

  name         String
  businessType BumdesUnitBusinessType

  bumdes   Bumdes? @relation(fields: [bumdesId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  bumdesId String?

  user   AuthUser @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String   @unique

  // generalJournals    GeneralJournal[]
  // adjustmentJournals AdjustmentJournal[]
  journals Journal[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([businessType, bumdesId], name: "bumdes_unit_business_type")
  @@map("bumdes_unit")
  @@schema("bumdes")
}

enum BumdesUnitBusinessType {
  SERVICES // JASA
  COMMERCE // DAGANG
  INDUSTRY // INDUSTRI

  @@schema("bumdes")
}

// Journals Schema
model AccountGroup {
  id   Int    @id @default(autoincrement())
  ref  String @unique // misal kelompok Aset: ref = 1
  name String
  slug String @unique

  accounts Account[]

  @@map("account_groups")
  @@schema("journals")
}

model Account {
  id       Int     @id @default(autoincrement())
  ref      String // misal di kelompok Aset, akun Kas: ref = 1-1001. format: <account group ref>-<account ref>. src: COA
  name     String
  slug     String  @unique
  isCredit Boolean // Saldo Umum => Kredit jika true, Debit jika false

  group    AccountGroup @relation(fields: [groupRef], references: [ref], onDelete: Cascade, onUpdate: Cascade)
  groupRef String

  // generalJournalItems    GeneralJournalItem[]
  // adjustmentJournalItems AdjustmentJournalItem[]
  journalItems JournalItem[]

  businessTypes BumdesUnitBusinessType[]

  @@map("accounts")
  @@schema("journals")
}

model Journal {
  id String @id @default(cuid())

  description String
  occuredAt   DateTime
  category    JournalCategory
  evidence    String?

  bumdesUnit   BumdesUnit @relation(fields: [bumdesUnitId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bumdesUnitId String

  items JournalItem[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("journals")
  @@schema("journals")
}

model JournalItem {
  id String @id @default(cuid())

  amount   Decimal
  isCredit Boolean

  account   Account @relation(fields: [accountId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  accountId Int

  journal   Journal @relation(fields: [journalId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  journalId String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("journal_items")
  @@schema("journals")
}

enum JournalCategory {
  GENERAL
  ADJUSTMENT

  @@map("journal_categories")
  @@schema("journals")
}
